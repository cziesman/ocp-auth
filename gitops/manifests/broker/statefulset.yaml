kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: ocp-amq-broker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ocp-amq-broker
  template:
    metadata:
      labels:
        app: ocp-amq-broker
    spec:
      volumes:
        - name: broker-storage
          persistentVolumeClaim:
            claimName: ocp-amq-broker
        - name: log4j2-config
          configMap:
            name: ocp-amq-broker-log4j2
        - name: broker-config
          configMap:
            name: ocp-amq-broker
        - name: user-config
          secret:
            secretName: ocp-amq-broker-users
        - name: role-config
          secret:
            secretName: ocp-amq-broker-roles
        - name: certs-volume
          emptyDir: {}
        - name: keystore-volume
          emptyDir: {}
      initContainers:
        - name: setup-keystore
          image: 'image-registry.openshift-image-registry.svc:5000/openshift/java-runtime:latest'
          command: ["/bin/sh", "-c"]
          args:
            - |
              KEYSTORE_DIR="/opt/amq/keystore"
              CERTS_DIR="/certs"
              KEYSTORE_FILE="$CERTS_DIR/keystore.jks"
              KEY_ALIAS="amq"
              STORE_PASS="changeit"
                              
              set -e
              echo "Extracting CA certificate..."
              awk 'BEGIN {c=0;} /BEGIN CERTIFICATE/ {c++} c==1' /etc/pki/tls/certs/ca-bundle.crt > /tmp/ca-cert.crt
              
              echo "Creating a new keystore..."
              keytool -keystore $KEYSTORE_FILE -storepass $STORE_PASS -noprompt -alias openshift-ca -importcert -file /tmp/ca-cert.crt
              
              echo "Keystore created successfully"
                   
              # Move keystore and truststore to final location
              cp $KEYSTORE_FILE $KEYSTORE_DIR/
              cp $TRUSTSTORE_FILE $KEYSTORE_DIR/
              
              chmod 644 $KEYSTORE_DIR/*
          volumeMounts:
            - name: certs-volume
              mountPath: /certs
            - name: keystore-volume
              mountPath: /opt/amq/keystore
      containers:
        - name: activemq-artemis
          image: 'registry.redhat.io/amq7/amq-broker-rhel8:7.12.3-1.1741869971'
#          image: 'registry.redhat.io/amq7/amq-broker:7.8-34.1669831362'
          envFrom:
            - secretRef:
                name: ocp-amq-broker
          resources: {}
          volumeMounts:
            - name: broker-storage
              mountPath: /opt/amq/broker/
            - name: log4j2-config
              mountPath: /opt/amq/conf/log4j2.properties
              subPath: log4j2.properties
            - name: broker-config
              mountPath: /opt/amq/conf/broker.xml
              subPath: broker.xml
            - name: user-config
              mountPath: /opt/amq/conf/artemis-users.properties
              subPath: artemis-users.properties
            - name: role-config
              mountPath: /opt/amq/conf/artemis-roles.properties
              subPath: artemis-roles.properties
            - name: keystore-volume
              mountPath: /opt/amq/keystore
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  serviceName: ocp-amq-broker
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  revisionHistoryLimit: 10
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
