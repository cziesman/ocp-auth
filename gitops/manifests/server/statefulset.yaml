kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: ocp-auth-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ocp-auth-server
  template:
    metadata:
      labels:
        app: ocp-auth-server
    spec:
      serviceAccountName: ocp-auth-server-sa
      volumes:
        - name: broker-storage
          persistentVolumeClaim:
            claimName: ocp-auth-server
        - name: login-config
          secret:
            secretName: ocp-auth-server-login
      initContainers:
        - name: copy-login-config
          image: 'registry.redhat.io/ubi8/ubi-minimal:8.10-1179.1739286367'
          command: ["/bin/sh", "-c"]
          args:
            - |
              [ -e /home/jboss/broker/etc ] && echo 'home/jboss/broker/etc/ exists.'
#              cat /opt/amq/auth/login.config
          volumeMounts:
            - name: login-config
              mountPath: /opt/amq/auth/
      containers:
        - name: activemq-artemis
          image: 'registry.redhat.io/amq7/amq-broker-rhel8:7.11.7-4.1740580601'
#          env:
#            - name: JAVA_ARGS
#              value: "-Djava.security.auth.login.config=/opt/amq/auth/login.config"
#            - name: JAVA_OPTS
#              value: "-Djava.security.auth.login.config=/home/jboss/broker/etc/login.config"
#            - name: JAVA_ARGS_APPEND
#              value: "-Djava.security.auth.login.config=/opt/amq/auth/login.config"
#            - name: JDK_JAVA_OPTIONS
#              value: "-Djava.security.auth.login.config=/home/jboss/broker/etc/login.config"
          envFrom:
            - secretRef:
                name: ocp-auth-server
          resources: {}
          volumeMounts:
            - name: broker-storage
              mountPath: /opt/amq/data/
            - name: login-config
              mountPath: /opt/amq/auth/
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          lifecycle:
            postStart:
              exec:
                command:
                  - "/bin/sh"
                  - "-c"
                  - "[ -e /opt/amq/auth ] && echo 'opt/amq/auth/ exists.' >> /tmp/auth.log"
#                  - "/bin/sh"
#                  - "-c"
#                  - "[ -e /home/jboss/broker/etc ] && echo 'home/jboss/broker/etc exists.' >> /tmp/etc.log"
#                  - "echo 'Running postStart' >> /tmp/poststart.log && cp /opt/amq/auth/login.config /home/jboss/broker/etc/login.config && echo 'File copied' >> /tmp/poststart.log"
#                command: ["/bin/sh", "-c"]
#                args:
#                  - |
#                    echo 'Running cat' >> /tmp/cat.log && cat /opt/amq/auth/login.config >> /tmp/cat.log
#                    echo 'Running postStart' >> /tmp/poststart.log && cp /opt/amq/auth/login.config /home/jboss/broker/etc/login.config && echo 'File copied' >> /tmp/poststart.log
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  serviceName: ocp-auth-server
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  revisionHistoryLimit: 10
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
