kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: ocp-auth-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ocp-auth-server
  template:
    metadata:
      labels:
        app: ocp-auth-server
    spec:
      volumes:
        - name: broker-storage
          persistentVolumeClaim:
            claimName: ocp-auth-server
        - name: broker-auth-config
          configMap:
            name: amq-broker-auth-1
            defaultMode: 420
      containers:
        - name: activemq-artemis
          image: 'registry.redhat.io/amq7/amq-broker-rhel8:7.11.7-4.1740580601'
          env:
            - name: JAVA_OPTS
              value: '-Djava.security.auth.login.config=/opt/amq/auth/login.config'
            - name: AMQ_NAME
              value: ocp-auth-server
            - name: OAUTH_CLIENT_ID
              value: amq-broker-oauth-1
            - name: OAUTH_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: amq-broker-oauth-1
                  key: oauth-secret
            - name: OAUTH_TOKEN_ENDPOINT
              value: 'https://oauth-openshift.apps.cluster-pmxsf.dynamic.redhatworkshops.io/oauth/token'
            - name: AMQ_USER
              value: redhat
            - name: AMQ_PASSWORD
              value: redhat
            - name: BROKER_XML
              valueFrom:
                configMapKeyRef:
                  name: broker-config-1-hm25dgt572
                  key: broker.xml
          resources: {}
          volumeMounts:
            - name: broker-storage
              mountPath: /opt/amq/data/
            - name: broker-auth-config
              mountPath: /opt/amq/auth/
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  serviceName: ocp-auth-server
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  revisionHistoryLimit: 10
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
